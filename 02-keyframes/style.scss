@import "../styles/base.scss";

:root {
  --color-gray: #8c97b7;
  --color-blue: #1c38f1;
  --color-green: #1fcdb0;
  --input-height: 3rem;
  --transition-duration: 0.3s;
  --transition-easing: cubic-bezier(0.5, 0, 0.5, 1);
  --animation-duration: 0.8s;
}
body {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #f9fbff;
}

.ui-form {
  background: #fff;
  box-shadow: 0 0.5rem 1rem #0003;
  padding: 1rem;
  border-radius: 0.25rem;
  display: grid;
  grid-template-columns: 1fr auto;
  grid-template-rows: 1fr;
  grid-column-gap: 1rem;
  grid-template-areas: "input button";

  // Add an animation here

  --color: var(--color-gray);
  &:focus-within {
    --color: var(--color-blue);
  }

  animation-name: slide-up;
  animation-duration: 1s;

  animation-timing-function: ease-in-out;
  animation-fill-mode: none;

  &:has(.ui-input:not(:placeholder-shown):not(:focus):invalid) {
    //background-color: #ff6666;
    animation-name: shake;
    animation-duration: 0.3s;
    animation-timing-function: ease-in-out;
  }

  > .ui-input,
  > .ui-button {
    animation: .5s .9s slide-up;
    animation-fill-mode: backwards;
    animation-timing-function: cubic-bezier(0.62, -0.01, 0, 1.57);
  }
}

.ui-input {
  grid-area: input;
  padding: 0 1rem;
  height: var(--input-height);
  border: 2px solid var(--color);
  border-radius: 0.25rem;
  outline: none;
  transition: inherit;
}

.ui-button {
  grid-area: button;
  border: none;
  padding: 0 1rem;
  color: white;
  font-weight: bold;
  border-radius: 0.25rem;
  height: var(--input-height);
  background-color: var(--color);
  transition: inherit;
}

[data-show]:not([data-active]) {
  display: none;
}

.ui-form {
  overflow: hidden;
}

@keyframes slide-up {
  from {
    transform: translateY(100%);
    opacity: 0;
  }

  50% {
    opacity: 1;
  }

  to {
    transform: none;
    opacity: 1;
  }
}

// prettier-ignore
@keyframes shake {
  /*
   0% {transform: translateX(-14%);}
  10% {transform: translateX(14%);}
  20% {transform: translateX(-8%);}
  30% {transform: translateX(7%);}
  50% {transform: translateX(-6%);}
  50% {transform: translateX(5%);}
  60% {transform: translateX(-4%);}
  70% {transform: translateX(3%);}
  80% {transform: translateX(-2%);}
  90% {transform: translateX(1%);}
  100% {transform: translateX(0);}
  */
  0% {transform: translateX(-4%);}
  10% {transform: translateX(4%);}
  20% {transform: translateX(-4%);}
  30% {transform: translateX(4%);}
  50% {transform: translateX(-3%);}
  50% {transform: translateX(3%);}
  60% {transform: translateX(-2%);}
  70% {transform: translateX(2%);}
  80% {transform: translateX(-1%);}
  90% {transform: translateX(1%);}
  100% {transform: translateX(0);}
}
